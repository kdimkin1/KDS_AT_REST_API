plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

def restAssured = "5.0.1",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.36"

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssured",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}